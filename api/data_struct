-----------------
-- Stack class --
-----------------
Stack = {}
function Stack:new()
  local obj = { _t = {} }
  setmetatable(obj, self)
  self.__index = self
  return obj
end

function Stack:size()
  return table.maxn(self._t)
end

function Stack:push(x)
  return table.insert(self._t, x)
end

function Stack:pop(x)
  return table.remove(self._t)
end

function Stack:empty()
  return self:size() == 0
end

function Stack:getTable()
  local t = {}
  for i, v in ipairs(self._t) do
    t[i] = v
  end
  return t
end

-----------------
-- Queue class --
-----------------
Queue = {}
function Queue:new()
  local obj = { _t = {} }
  setmetatable(obj, self)
  self.__index = self
  return obj
end

function Queue:size()
  return table.maxn(self._t)
end

function Queue:put(x)
  return table.insert(self._t, x)
end

function Queue:get(x)
  return table.remove(self._t, 1)
end

function Queue:empty()
  return self:size() == 0
end

function Queue:getTable()
  local t = {}
  for i, v in ipairs(self._t) do
    t[i] = v
  end
  return t
end


